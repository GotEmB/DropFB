// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

require.config({
  paths: {
    jquery: "jquery/jquery-2.0.3.min",
    batman: "batmanjs/batman",
    bootstrap: "twitter/bootstrap.min",
    facebook: "//connect.facebook.net/en_US/all"
  },
  shim: {
    batman: {
      deps: ["jquery"],
      exports: "Batman"
    },
    bootstrap: ["jquery"],
    facebook: {
      exports: "FB"
    }
  }
});

require(["jquery", "batman", "facebook", "bootstrap"], function($, Batman, FB) {
  var AppContext, DropFB, User, _ref, _ref1;
  User = (function(_super) {
    __extends(User, _super);

    function User() {
      _ref = User.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return User;

  })(Batman.Model);
  AppContext = (function(_super) {
    __extends(AppContext, _super);

    AppContext.accessor("userLoggedIn", function() {
      return this.get("currentUser") instanceof User;
    });

    function AppContext() {
      var _this = this;
      FB.init({
        appId: "364692580326195",
        status: true
      });
      FB.Event.subscribe("auth.authResponseChange", function(response1) {
        console.log(response1);
        if (response1.status === "connected" && (response1.authResponse != null)) {
          return FB.api("/me", function(response2) {
            return _this.set("currentUser", new User({
              name: response2.name,
              accessToken: response1.authResponse.accessToken,
              userId: response1.authResponse.userID
            }));
          });
        } else {
          return _this.unset("currentUser");
        }
      });
    }

    AppContext.prototype.login = function() {
      return FB.login();
    };

    return AppContext;

  })(Batman.Model);
  DropFB = (function(_super) {
    __extends(DropFB, _super);

    function DropFB() {
      _ref1 = DropFB.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    DropFB.appContext = new AppContext;

    return DropFB;

  })(Batman.App);
  return DropFB.run();
});

/*
//@ sourceMappingURL=page.map
*/
